/*
    Generated via
    R-type
        ([01]{7}) rs2 rs1 ([01]{3}) rd ([01]{7}) (.+)
        INSTRUCTION(\u\L$4, \L$4, R, 0b$1, 0b$2, 0b$3)

    I-Type
        imm\[11:0\] rs1 ([01]{3}) rd ([01]{7}) (.+)
        INSTRUCTION(\u\L$3, \L$3, I, 0b$1, 0b$2)
    
    S-Type
        imm\[11:5\] rs2 rs1 ([01]{3}) imm\[4:0\] ([01]{7}) (.+)
        INSTRUCTION(\u\L$3, \L$3, S, 0b$1, 0b$2)

    B-Type
        imm\[12\|10:5\] rs2 rs1 ([01]{3}) imm\[4:1\|11\] ([01]{7}) (.+)
        INSTRUCTION(\u\L$3, \L$3, B, 0b$1, 0b$2)

    U-Type
        imm\[31:12\] rd ([01]{7}) (.+)
        INSTRUCTION(\u\L$2, \L$2, U, 0b$1)

    J-Type
        imm\[20\|10:1\|11\|19:12\] rd ([01]{7}) (.+)
        INSTRUCTION(\u\L$2, \L$2, J, 0b$1)

    R4-Type
        rs3 ([01]{2}) rs2 rs1 rm rd ([01]{7}) (.+)
        INSTRUCTION(\u\L$3, \L$3, R4, 0b$1, 0b$2)

    RF-type
        ([01]{7}) rs2 rs1 rm rd ([01]{7}) (.+)
        INSTRUCTION(\u\L$3, \L$3, RF, 0b$1, 0b$2)

    R3F-type
        ([01]{7}) ([01]{5}) rs1 rm rd ([01]{7}) (.+)
        INSTRUCTION(\u\L$4, \L$4, R3F, 0b$1, 0b$2, 0b$3)

    R2F-type
        ([01]{7}) ([01]{5}) rs1 ([01]{3}) rd ([01]{7}) (.+)
        INSTRUCTION(\u\L$5, \L$5, R2F, 0b$1, 0b$2, 0b$3, 0b$4)

    IS32-Type
        ([01]{7}) shamt rs1 ([01]{3}) rd ([01]{7}) (.+)
        INSTRUCTION(\u\L$4, \L$4, IS32, 0b$1, 0b$2, 0b$3)

    IS64-Type
        ([01]{6}) shamt rs1 ([01]{3}) rd ([01]{7}) (.+)
        INSTRUCTION(\u\L$4, \L$4, IS32, 0b$1, 0b$2, 0b$3)
*/

// RV32I Base Instruction Set
INSTRUCTION(Lui, lui, U, 0b0110111)
INSTRUCTION(Auipc, auipc, U, 0b0010111)
INSTRUCTION(Jal, jal, J, 0b1101111)
INSTRUCTION(Jalr, jalr, I, 0b000, 0b1100111)
INSTRUCTION(Beq, beq, B, 0b000, 0b1100011)
INSTRUCTION(Bne, bne, B, 0b001, 0b1100011)
INSTRUCTION(Blt, blt, B, 0b100, 0b1100011)
INSTRUCTION(Bge, bge, B, 0b101, 0b1100011)
INSTRUCTION(Bltu, bltu, B, 0b110, 0b1100011)
INSTRUCTION(Bgeu, bgeu, B, 0b111, 0b1100011)
INSTRUCTION(Lb, lb, I, 0b000, 0b0000011)
INSTRUCTION(Lh, lh, I, 0b001, 0b0000011)
INSTRUCTION(Lw, lw, I, 0b010, 0b0000011)
INSTRUCTION(Lbu, lbu, I, 0b100, 0b0000011)
INSTRUCTION(Lhu, lhu, I, 0b101, 0b0000011)
INSTRUCTION(Sb, sb, S, 0b000, 0b0100011)
INSTRUCTION(Sh, sh, S, 0b001, 0b0100011)
INSTRUCTION(Sw, sw, S, 0b010, 0b0100011)
INSTRUCTION(Addi, addi, I, 0b000, 0b0010011)
INSTRUCTION(Slti, slti, I, 0b010, 0b0010011)
INSTRUCTION(Sltiu, sltiu, I, 0b011, 0b0010011)
INSTRUCTION(Xori, xori, I, 0b100, 0b0010011)
INSTRUCTION(Ori, ori, I, 0b110, 0b0010011)
INSTRUCTION(Andi, andi, I, 0b111, 0b0010011)
// The are not included in RV64I
//INSTRUCTION(Slli, slli, IS32, 0b0000000, 0b001, 0b0010011)
//INSTRUCTION(Srli, srli, IS32, 0b0000000, 0b101, 0b0010011)
//INSTRUCTION(Srai, srai, IS32, 0b0100000, 0b101, 0b0010011)
INSTRUCTION(Add, add, R, 0b0000000, 0b000, 0b0110011)
INSTRUCTION(Sub, sub, R, 0b0100000, 0b000, 0b0110011)
INSTRUCTION(Sll, sll, R, 0b0000000, 0b001, 0b0110011)
INSTRUCTION(Slt, slt, R, 0b0000000, 0b010, 0b0110011)
INSTRUCTION(Sltu, sltu, R, 0b0000000, 0b011, 0b0110011)
INSTRUCTION(Xor, xor_, R, 0b0000000, 0b100, 0b0110011)
INSTRUCTION(Srl, srl, R, 0b0000000, 0b101, 0b0110011)
INSTRUCTION(Sra, sra, R, 0b0100000, 0b101, 0b0110011)
INSTRUCTION(Or, or_, R, 0b0000000, 0b110, 0b0110011)
INSTRUCTION(And, and_, R, 0b0000000, 0b111, 0b0110011)
//fm pred succ rs1 000 rd 0001111 FENCE
//000000000000 00000 000 00000 1110011 ECALL
//000000000001 00000 000 00000 1110011 EBREAK

// RV64I Base Instruction Set (in addition to RV32I)
INSTRUCTION(Lwu, lwu, I, 0b110, 0b0000011)
INSTRUCTION(Ld, ld, I, 0b011, 0b0000011)
INSTRUCTION(Sd, sd, S, 0b011, 0b0100011)
INSTRUCTION(Slli, slli, IS32, 0b000000, 0b001, 0b0010011)
INSTRUCTION(Srli, srli, IS32, 0b000000, 0b101, 0b0010011)
INSTRUCTION(Srai, srai, IS32, 0b010000, 0b101, 0b0010011)
INSTRUCTION(Addiw, addiw, I, 0b000, 0b0011011)
INSTRUCTION(Slliw, slliw, IS32, 0b0000000, 0b001, 0b0011011)
INSTRUCTION(Srliw, srliw, IS32, 0b0000000, 0b101, 0b0011011)
INSTRUCTION(Sraiw, sraiw, IS32, 0b0100000, 0b101, 0b0011011)
INSTRUCTION(Addw, addw, R, 0b0000000, 0b000, 0b0111011)
INSTRUCTION(Subw, subw, R, 0b0100000, 0b000, 0b0111011)
INSTRUCTION(Sllw, sllw, R, 0b0000000, 0b001, 0b0111011)
INSTRUCTION(Srlw, srlw, R, 0b0000000, 0b101, 0b0111011)
INSTRUCTION(Sraw, sraw, R, 0b0100000, 0b101, 0b0111011)

// RV32/RV64 Zifencei Standard Extension
INSTRUCTION(Fence_i, fence_i, I, 0b001, 0b0001111)

// RV32/RV64 Zicsr Standard Extension
//csr rs1 001 rd 1110011 CSRRW
//csr rs1 010 rd 1110011 CSRRS
//csr rs1 011 rd 1110011 CSRRC
//csr uimm 101 rd 1110011 CSRRWI
//csr uimm 110 rd 1110011 CSRRSI
//csr uimm 111 rd 1110011 CSRRCI

// RV32M Standard Extension
INSTRUCTION(Mul, mul, R, 0b0000001, 0b000, 0b0110011)
INSTRUCTION(Mulh, mulh, R, 0b0000001, 0b001, 0b0110011)
INSTRUCTION(Mulhsu, mulhsu, R, 0b0000001, 0b010, 0b0110011)
INSTRUCTION(Mulhu, mulhu, R, 0b0000001, 0b011, 0b0110011)
INSTRUCTION(Div, div, R, 0b0000001, 0b100, 0b0110011)
INSTRUCTION(Divu, divu, R, 0b0000001, 0b101, 0b0110011)
INSTRUCTION(Rem, rem, R, 0b0000001, 0b110, 0b0110011)
INSTRUCTION(Remu, remu, R, 0b0000001, 0b111, 0b0110011)

// RV64M Standard Extension (in addition to RV32M)
INSTRUCTION(Mulw, mulw, R, 0b0000001, 0b000, 0b0111011)
INSTRUCTION(Divw, divw, R, 0b0000001, 0b100, 0b0111011)
INSTRUCTION(Divuw, divuw, R, 0b0000001, 0b101, 0b0111011)
INSTRUCTION(Remw, remw, R, 0b0000001, 0b110, 0b0111011)
INSTRUCTION(Remuw, remuw, R, 0b0000001, 0b111, 0b0111011)

// RV32A Standard Extension
//00010 aq rl 00000 rs1 010 rd 0101111 LR_W
//00011 aq rl rs2 rs1 010 rd 0101111 SC_W
//00001 aq rl rs2 rs1 010 rd 0101111 AMOSWAP_W
//00000 aq rl rs2 rs1 010 rd 0101111 AMOADD_W
//00100 aq rl rs2 rs1 010 rd 0101111 AMOXOR_W
//01100 aq rl rs2 rs1 010 rd 0101111 AMOAND_W
//01000 aq rl rs2 rs1 010 rd 0101111 AMOOR_W
//10000 aq rl rs2 rs1 010 rd 0101111 AMOMIN_W
//10100 aq rl rs2 rs1 010 rd 0101111 AMOMAX_W
//11000 aq rl rs2 rs1 010 rd 0101111 AMOMINU_W
//11100 aq rl rs2 rs1 010 rd 0101111 AMOMAXU_W

//RV64A Standard Extension (in addition to RV32A)
//00010 aq rl 00000 rs1 011 rd 0101111 LR_D
//00011 aq rl rs2 rs1 011 rd 0101111 SC_D
//00001 aq rl rs2 rs1 011 rd 0101111 AMOSWAP_D
//00000 aq rl rs2 rs1 011 rd 0101111 AMOADD_D
//00100 aq rl rs2 rs1 011 rd 0101111 AMOXOR_D
//01100 aq rl rs2 rs1 011 rd 0101111 AMOAND_D
//01000 aq rl rs2 rs1 011 rd 0101111 AMOOR_D
//10000 aq rl rs2 rs1 011 rd 0101111 AMOMIN_D
//10100 aq rl rs2 rs1 011 rd 0101111 AMOMAX_D
//11000 aq rl rs2 rs1 011 rd 0101111 AMOMINU_D
//11100 aq rl rs2 rs1 011 rd 0101111 AMOMAXU_D

// RV32F Standard Extension
INSTRUCTION(Flw, flw, I, 0b010, 0b0000111)
INSTRUCTION(Fsw, fsw, S, 0b010, 0b0100111)
INSTRUCTION(Fmadd_s, fmadd_s, R4, 0b00, 0b1000011)
INSTRUCTION(Fmsub_s, fmsub_s, R4, 0b00, 0b1000111)
INSTRUCTION(Fnmsub_s, fnmsub_s, R4, 0b00, 0b1001011)
INSTRUCTION(Fnmadd_s, fnmadd_s, R4, 0b00, 0b1001111)
INSTRUCTION(Fadd_s, fadd_s, RF, 0b0000000, 0b1010011)
INSTRUCTION(Fsub_s, fsub_s, RF, 0b0000100, 0b1010011)
INSTRUCTION(Fmul_s, fmul_s, RF, 0b0001000, 0b1010011)
INSTRUCTION(Fdiv_s, fdiv_s, RF, 0b0001100, 0b1010011)
INSTRUCTION(Fsqrt_s, fsqrt_s, R3F, 0b0101100, 0b00000, 0b1010011)
INSTRUCTION(Fsgnj_s, fsgnj_s, R, 0b0010000, 0b000, 0b1010011)
INSTRUCTION(Fsgnjn_s, fsgnjn_s, R, 0b0010000, 0b001, 0b1010011)
INSTRUCTION(Fsgnjx_s, fsgnjx_s, R, 0b0010000, 0b010, 0b1010011)
INSTRUCTION(Fmin_s, fmin_s, R, 0b0010100, 0b000, 0b1010011)
INSTRUCTION(Fmax_s, fmax_s, R, 0b0010100, 0b001, 0b1010011)
INSTRUCTION(Fcvt_w_s, fcvt_w_s, R3F, 0b1100000, 0b00000, 0b1010011)
INSTRUCTION(Fcvt_wu_s, fcvt_wu_s, R3F, 0b1100000, 0b00001, 0b1010011)
INSTRUCTION(Fmv_x_w, fmv_x_w, R2F, 0b1110000, 0b00000, 0b000, 0b1010011)
INSTRUCTION(Feq_s, feq_s, R, 0b1010000, 0b010, 0b1010011)
INSTRUCTION(Flt_s, flt_s, R, 0b1010000, 0b001, 0b1010011)
INSTRUCTION(Fle_s, fle_s, R, 0b1010000, 0b000, 0b1010011)
INSTRUCTION(Fclass_s, fclass_s, R2F, 0b1110000, 0b00000, 0b001, 0b1010011)
INSTRUCTION(Fcvt_s_w, fcvt_s_w, R3F, 0b1101000, 0b00000, 0b1010011)
INSTRUCTION(Fcvt_s_wu, fcvt_s_wu, R3F, 0b1101000, 0b00001, 0b1010011)
INSTRUCTION(Fmv_w_x, fmv_w_x, R2F, 0b1111000, 0b00000, 0b000, 0b1010011)

//RV64F Standard Extension (in addition to RV32F)
INSTRUCTION(Fcvt_l_s, fcvt_l_s, R3F, 0b1100000, 0b00010, 0b1010011)
INSTRUCTION(Fcvt_lu_s, fcvt_lu_s, R3F, 0b1100000, 0b00011, 0b1010011)
INSTRUCTION(Fcvt_s_l, fcvt_s_l, R3F, 0b1101000, 0b00010, 0b1010011)
INSTRUCTION(Fcvt_s_lu, fcvt_s_lu, R3F, 0b1101000, 0b00011, 0b1010011)

//RV32D Standard Extension
INSTRUCTION(Fld, fld, I, 0b011, 0b0000111)
INSTRUCTION(Fsd, fsd, S, 0b011, 0b0100111)
INSTRUCTION(Fmadd_d, fmadd_d, R4, 0b01, 0b1000011)
INSTRUCTION(Fmsub_d, fmsub_d, R4, 0b01, 0b1000111)
INSTRUCTION(Fnmsub_d, fnmsub_d, R4, 0b01, 0b1001011)
INSTRUCTION(Fnmadd_d, fnmadd_d, R4, 0b01, 0b1001111)
INSTRUCTION(Fadd_d, fadd_d, RF, 0b0000001, 0b1010011)
INSTRUCTION(Fsub_d, fsub_d, RF, 0b0000101, 0b1010011)
INSTRUCTION(Fmul_d, fmul_d, RF, 0b0001001, 0b1010011)
INSTRUCTION(Fdiv_d, fdiv_d, RF, 0b0001101, 0b1010011)
INSTRUCTION(Fsqrt_d, fsqrt_d, R3F, 0b0101101, 0b00000, 0b1010011)
INSTRUCTION(Fsgnj_d, fsgnj_d, R, 0b0010001, 0b000, 0b1010011)
INSTRUCTION(Fsgnjn_d, fsgnjn_d, R, 0b0010001, 0b001, 0b1010011)
INSTRUCTION(Fsgnjx_d, fsgnjx_d, R, 0b0010001, 0b010, 0b1010011)
INSTRUCTION(Fmin_d, fmin_d, R, 0b0010101, 0b000, 0b1010011)
INSTRUCTION(Fmax_d, fmax_d, R, 0b0010101, 0b001, 0b1010011)
INSTRUCTION(Fcvt_s_d, fcvt_s_d, R3F, 0b0100000, 0b00001, 0b1010011)
INSTRUCTION(Fcvt_d_s, fcvt_d_s, R3F, 0b0100001, 0b00000, 0b1010011)
INSTRUCTION(Feq_d, feq_d, R, 0b1010001, 0b010, 0b1010011)
INSTRUCTION(Flt_d, flt_d, R, 0b1010001, 0b001, 0b1010011)
INSTRUCTION(Fle_d, fle_d, R, 0b1010001, 0b000, 0b1010011)
INSTRUCTION(Fclass_d, fclass_d, R2F, 0b1110001, 0b00000, 0b001, 0b1010011)
INSTRUCTION(Fcvt_w_d, fcvt_w_d, R3F, 0b1100001, 0b00000, 0b1010011)
INSTRUCTION(Fcvt_wu_d, fcvt_wu_d, R3F, 0b1100001, 0b00001, 0b1010011)
INSTRUCTION(Fcvt_d_w, fcvt_d_w, R3F, 0b1101001, 0b00000, 0b1010011)
INSTRUCTION(Fcvt_d_wu, fcvt_d_wu, R3F, 0b1101001, 0b00001, 0b1010011)

//RV64D Standard Extension (in addition to RV32D)
INSTRUCTION(Fcvt_l_d, fcvt_l_d, R3F, 0b1100001, 0b00010, 0b1010011)
INSTRUCTION(Fcvt_lu_d, fcvt_lu_d, R3F, 0b1100001, 0b00011, 0b1010011)
INSTRUCTION(Fmv_x_d, fmv_x_d, R2F, 0b1110001, 0b00000, 0b000, 0b1010011)
INSTRUCTION(Fcvt_d_l, fcvt_d_l, R3F, 0b1101001, 0b00010, 0b1010011)
INSTRUCTION(Fcvt_d_lu, fcvt_d_lu, R3F, 0b1101001, 0b00011, 0b1010011)
INSTRUCTION(Fmv_d_x, fmv_d_x, R2F, 0b1111001, 0b00000, 0b000, 0b1010011)

//RV32Q Standard Extension
INSTRUCTION(Flq, flq, I, 0b100, 0b0000111)
INSTRUCTION(Fsq, fsq, S, 0b100, 0b0100111)
INSTRUCTION(Fmadd_q, fmadd_q, R4, 0b11, 0b1000011)
INSTRUCTION(Fmsub_q, fmsub_q, R4, 0b11, 0b1000111)
INSTRUCTION(Fnmsub_q, fnmsub_q, R4, 0b11, 0b1001011)
INSTRUCTION(Fnmadd_q, fnmadd_q, R4, 0b11, 0b1001111)
INSTRUCTION(Fadd_q, fadd_q, RF, 0b0000011, 0b1010011)
INSTRUCTION(Fsub_q, fsub_q, RF, 0b0000111, 0b1010011)
INSTRUCTION(Fmul_q, fmul_q, RF, 0b0001011, 0b1010011)
INSTRUCTION(Fdiv_q, fdiv_q, RF, 0b0001111, 0b1010011)
INSTRUCTION(Fsqrt_q, fsqrt_q, R3F, 0b0101111, 0b00000, 0b1010011)
INSTRUCTION(Fsgnj_q, fsgnj_q, R, 0b0010011, 0b000, 0b1010011)
INSTRUCTION(Fsgnjn_q, fsgnjn_q, R, 0b0010011, 0b001, 0b1010011)
INSTRUCTION(Fsgnjx_q, fsgnjx_q, R, 0b0010011, 0b010, 0b1010011)
INSTRUCTION(Fmin_q, fmin_q, R, 0b0010111, 0b000, 0b1010011)
INSTRUCTION(Fmax_q, fmax_q, R, 0b0010111, 0b001, 0b1010011)
INSTRUCTION(Fcvt_s_q, fcvt_s_q, R3F, 0b0100000, 0b00011, 0b1010011)
INSTRUCTION(Fcvt_q_s, fcvt_q_s, R3F, 0b0100011, 0b00000, 0b1010011)
INSTRUCTION(Fcvt_d_q, fcvt_d_q, R3F, 0b0100001, 0b00011, 0b1010011)
INSTRUCTION(Fcvt_q_d, fcvt_q_d, R3F, 0b0100011, 0b00001, 0b1010011)
INSTRUCTION(Feq_q, feq_q, R, 0b1010011, 0b010, 0b1010011)
INSTRUCTION(Flt_q, flt_q, R, 0b1010011, 0b001, 0b1010011)
INSTRUCTION(Fle_q, fle_q, R, 0b1010011, 0b000, 0b1010011)
INSTRUCTION(Fclass_q, fclass_q, R2F, 0b1110011, 0b00000, 0b001, 0b1010011)
INSTRUCTION(Fcvt_w_q, fcvt_w_q, R3F, 0b1100011, 0b00000, 0b1010011)
INSTRUCTION(Fcvt_wu_q, fcvt_wu_q, R3F, 0b1100011, 0b00001, 0b1010011)
INSTRUCTION(Fcvt_q_w, fcvt_q_w, R3F, 0b1101011, 0b00000, 0b1010011)
INSTRUCTION(Fcvt_q_wu, fcvt_q_wu, R3F, 0b1101011, 0b00001, 0b1010011)

//RV64Q Standard Extension (in addition to RV32Q)
INSTRUCTION(Fcvt_l_q, fcvt_l_q, R3F, 0b1100011, 0b00010, 0b1010011)
INSTRUCTION(Fcvt_lu_q, fcvt_lu_q, R3F, 0b1100011, 0b00011, 0b1010011)
INSTRUCTION(Fcvt_q_l, fcvt_q_l, R3F, 0b1101011, 0b00010, 0b1010011)
INSTRUCTION(Fcvt_q_lu, fcvt_q_lu, R3F, 0b1101011, 0b00011, 0b1010011)